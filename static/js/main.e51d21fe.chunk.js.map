{"version":3,"sources":["Components/Api/authHelpers.js","Components/Api/SpotifyApi.js","Components/Store/searchSlice.js","Components/Store/playlistSlice.js","Components/Store/store.js","Components/Store/authSlice.js","Components/Store/songsSlice.js","colors.js","Components/Logout/LogoutStyle.js","Components/Logout/Logout.js","Components/Login/LoginStyle.js","Components/Login/Dots.js","Components/Login/Login.js","Components/Login/useLogin.js","Components/SpotifyComponents/Header/HeaderStyle.js","Components/SpotifyComponents/Header/Search/SearchStyle.js","Components/SpotifyComponents/Header/Search/Search.js","Components/SpotifyComponents/Header/SpotifyLogo/SpotifyLogoStyle.js","Components/SpotifyComponents/Header/SpotifyLogo/spotifyLogo.png","Components/SpotifyComponents/Header/SpotifyLogo/SpotifyLogo.js","Components/SpotifyComponents/Header/Header.js","Components/SpotifyComponents/TrackResult/TrackResultStyle.js","Components/SpotifyComponents/TrackResult/TrackResult.js","Components/SpotifyComponents/InfiniteLoader/InfiniteLoaderStyle.js","Components/SpotifyComponents/InfiniteLoader/useHeight.js","Components/SpotifyComponents/InfiniteLoader/InnerElement.js","Components/SpotifyComponents/PlaylistTracks/PlaylistTracks.js","Components/SpotifyComponents/SearchTracks/SearchTracks.js","Components/SpotifyComponents/SidePanel/Playlist/PlaylistStyle.js","Components/SpotifyComponents/SidePanel/Playlist/Playlist.js","Components/SpotifyComponents/SidePanel/SidePanelStyle.js","Components/SpotifyComponents/SidePanel/SidePanel.js","Components/SpotifyComponents/Player/PlayerStyles.js","Components/SpotifyComponents/Player/Player.js","Components/SpotifyComponents/SpotifyComponents.js","AppStyle.js","App.js","Components/AuthIntercept/AuthIntercept.js","index.js"],"names":["makeid","length","result","characters","i","char","charAt","Math","floor","random","push","join","sha256","plain","data","TextEncoder","encode","window","crypto","subtle","digest","base64urlencode","a","btoa","String","fromCharCode","apply","Uint8Array","replace","pkce_challenge_from_verifier","v","hashed","codeVerifierLocal","stateLocal","buildParams","parameters","params","Object","keys","param","value","popupWindow","url","windowName","win","w","h","y","top","outerHeight","screenY","x","outerWidth","screenX","open","spotifyApi","SpotifyWebApi","userId","refreshAccessToken","refreshToken","getRefreshToken","URLSearchParams","append","process","axios","post","headers","then","res","access_token","expires_in","refresh_token","localStorage","setItem","adjustedExpiry","Date","now","setRefreshToken","setAccessToken","setTimeout","console","log","catch","err","useStore","getState","logout","preFlightCheck","accessToken","expiry","getItem","login","getAccessToken","get","Authorization","id","setAccessRequired","checkAuthentication","loginRedirect","min","max","ceil","codeChallenge","response_type","client_id","redirect_uri","scope","state","code_challenge","code_challenge_method","authURL","popup","requestTokens","payload","code","error","formatDuration","duration","seconds","round","minutes","toString","padStart","formatTracks","tracks","playlist","map","track","albumImage","album","images","reduce","smallest","image","height","artist","artists","name","title","albumUrl","duration_ms","getTracks","query","offset","searchTracks","body","items","getMyPlaylist","getMySavedTracks","getPlaylist","getPlaylists","getUserPlaylists","limit","clearTracksId","queryId","onCloseSearch","set","searchTracksOpen","clearSearchText","searchFinised","searchQuery","searchOffset","inProgress","clearPlaylistId","buildPlaylist","list","song","slice","onClosePlaylist","selectedPlaylist","playlistTracksOpen","playlistRequestsFinised","playlistRequestsOffset","playlistRequestsInProgress","playlistTracks","create","loggedIn","accessRequired","interfaceOpen","lightsOn","removeItem","authSlice","onSelectPlayList","setPlaylistSong","newPlaylist","songs","isPlaying","playlistRequestsLoadNextPage","playlistSlice","searchInProgress","sendSearchRequest","setSearchSong","searchLoadNextPage","searchSlice","currentSong","setCurrentSong","songsSlice","colors","Container","styled","div","StyledLogoutIcon","LogoutIcon","Logout","IconButton","color","onClick","fontSize","Status","AccessRequired","WelcomeButtonsContainer","Button","Dots","useState","dots","setDots","useEffect","t","update","clearTimeout","Login","setInProgress","setError","initiateSpotifyLogin","onResponse","success","spotifyCallback","close","useLogin","HeaderContainer","SearchBarContainer","Input","input","StyledSearchIcon","SearchIcon","StyledCancelIcon","ClearIcon","Search","searchText","setSearchText","requestSearch","useMemo","debounce","cancel","onSearchTextChange","useCallback","e","target","type","placeholder","onChange","autoComplete","Logo","img","SpotifyLogo","newWindow","opener","src","alt","Header","setOpen","TrackResultContainer","Image","TextContainer","TrackTitle","Artist","Duration","TrackResult","selectSong","StyledOuter","StyledOuterTop","StyledOuterLeft","StyledInner","useHeight","setHeight","updateHeight","innerHeight","addEventListener","removeEventListener","InnerElement","props","OuterElement","forwardRef","ref","children","style","onScroll","Row","React","memo","index","item","key","areEqual","PlaylistTracks","hasNextPage","loadMoreItems","isItemLoaded","itemCount","threshold","onItemsRendered","itemSize","outerElementType","innerElementType","itemData","SearchTracks","PlaylistContainer","selected","Playlist","SidePanelContainer","likedSongs","SidePanel","playlists","setPlaylists","PlayerContainer","styles","bgColor","sliderTrackColor","sliderColor","sliderHandleColor","trackNameColor","trackArtistColor","Player","play","setPlay","playerCB","token","callback","showSaveIcon","syncExternalDevice","uris","SpotifyComponents","Background","App","AuthIntercept","pass","setPass","urlParams","location","search","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e51d21fe.chunk.js","sourcesContent":["export const makeid = (length) => {\r\n  const result = [];\r\n  const characters =\r\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n  for (let i = 0; i < length; i++) {\r\n    const char = characters.charAt(\r\n      Math.floor(Math.random() * characters.length)\r\n    );\r\n    result.push(char);\r\n  }\r\n  return result.join(\"\");\r\n};\r\nfunction sha256(plain) {\r\n  const encoder = new TextEncoder();\r\n  const data = encoder.encode(plain);\r\n  return window.crypto.subtle.digest(\"SHA-256\", data);\r\n}\r\n\r\nfunction base64urlencode(a) {\r\n  return btoa(String.fromCharCode.apply(null, new Uint8Array(a)))\r\n    .replace(/\\+/g, \"-\")\r\n    .replace(/\\//g, \"_\")\r\n    .replace(/=+$/, \"\");\r\n}\r\n\r\nexport async function pkce_challenge_from_verifier(v) {\r\n  const hashed = await sha256(v);\r\n  return base64urlencode(hashed);\r\n}\r\n\r\n// helper function to generate a random number\r\nexport const getRandomInt = (min, max) => {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n};\r\nexport const buildParams = (parameters) => {\r\n  const result = [];\r\n  const params = Object.keys(parameters);\r\n  for (let i = 0; i < params.length; i++) {\r\n    const param = params[i];\r\n    const value = parameters[param];\r\n    if (i > 0) result.push(\"&\");\r\n    result.push(param, \"=\", value);\r\n  }\r\n  return result.join(\"\");\r\n};\r\nexport const popupWindow = (url, windowName, win, w, h) => {\r\n  const y = win.top.outerHeight / 2 + win.top.screenY - h / 2;\r\n  const x = win.top.outerWidth / 2 + win.top.screenX - w / 2;\r\n  return win.open(\r\n    url,\r\n    windowName,\r\n    `toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=no, resizable=no, copyhistory=no, width=${w}, height=${h}, top=${y}, left=${x}`\r\n  );\r\n};\r\n","import SpotifyWebApi from \"spotify-web-api-node\";\r\nimport axios from \"axios\";\r\nimport {\r\n  makeid,\r\n  getRandomInt,\r\n  pkce_challenge_from_verifier,\r\n  buildParams,\r\n  popupWindow,\r\n} from \"./authHelpers\";\r\nimport { useStore } from \"../Store/store\";\r\n\r\nexport const spotifyApi = new SpotifyWebApi();\r\nlet userId = null;\r\n\r\nspotifyApi.refreshAccessToken = () => {\r\n  const refreshToken = spotifyApi.getRefreshToken();\r\n  const params = new URLSearchParams();\r\n\r\n  params.append(\"client_id\", process.env.REACT_APP_SPOTIFY_CLIENT_ID);\r\n  params.append(\"grant_type\", \"refresh_token\");\r\n  params.append(\"refresh_token\", refreshToken);\r\n\r\n  return axios\r\n    .post(\"https://accounts.spotify.com/api/token\", params, {\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded;\",\r\n      },\r\n    })\r\n    .then((res) => {\r\n      const { access_token, expires_in, refresh_token } = res.data;\r\n      localStorage.setItem(\"sp-accessToken\", access_token);\r\n      localStorage.setItem(\"sp-refreshToken\", refresh_token);\r\n      const adjustedExpiry = (expires_in - 60) * 1000;\r\n      localStorage.setItem(\"sp-expiry\", Date.now() + adjustedExpiry);\r\n      spotifyApi.setRefreshToken(refresh_token);\r\n      spotifyApi.setAccessToken(access_token);\r\n      setTimeout(() => {\r\n        spotifyApi.refreshAccessToken();\r\n      }, adjustedExpiry);\r\n      console.log(\"accessTokenRefreshed\");\r\n      return true;\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"Could not refresh access token\", err);\r\n      useStore.getState().logout();\r\n      return false;\r\n    });\r\n};\r\n\r\nspotifyApi.preFlightCheck = async (accessToken) => {\r\n  const expiry = localStorage.getItem(\"sp-expiry\");\r\n  if (Date.now() > expiry) {\r\n    //try to refresh token\r\n    return await spotifyApi.refreshAccessToken();\r\n  } else {\r\n    setTimeout(() => {\r\n      spotifyApi.refreshAccessToken();\r\n    }, +expiry - Date.now());\r\n  }\r\n  spotifyApi.setAccessToken(accessToken);\r\n  return \"accessTokenValid\";\r\n};\r\n\r\nspotifyApi.login = async () => {\r\n  const accessToken = spotifyApi.getAccessToken();\r\n\r\n  return axios\r\n    .get(\"https://api.spotify.com/v1/me\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n    })\r\n    .then((res) => {\r\n      userId = res.data.id;\r\n      return true;\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"Could not access profile data\", err);\r\n      useStore.getState().setAccessRequired();\r\n      useStore.getState().logout();\r\n      return false;\r\n    });\r\n};\r\n\r\nspotifyApi.checkAuthentication = async () => {\r\n  const accessToken = localStorage.getItem(\"sp-accessToken\");\r\n  const refreshToken = localStorage.getItem(\"sp-refreshToken\");\r\n\r\n  if (!accessToken || !refreshToken) return false;\r\n\r\n  spotifyApi.setRefreshToken(refreshToken);\r\n  const preFlight = await spotifyApi.preFlightCheck(accessToken);\r\n  if (!preFlight) return false;\r\n\r\n  return await spotifyApi.login();\r\n};\r\n\r\nlet codeVerifierLocal;\r\nlet stateLocal;\r\n\r\nspotifyApi.loginRedirect = async () => {\r\n  codeVerifierLocal = makeid(getRandomInt(43, 128));\r\n\r\n  const codeChallenge = await pkce_challenge_from_verifier(codeVerifierLocal);\r\n  stateLocal = makeid(12);\r\n\r\n  // construct the authentication url\r\n  const scopes = [\r\n    \"streaming\",\r\n    \"user-read-email\",\r\n    \"user-read-private\",\r\n    \"user-read-playback-state\",\r\n    \"user-modify-playback-state\",\r\n    \"user-library-read\",\r\n    \"user-library-modify\",\r\n    \"playlist-read-private\",\r\n  ];\r\n  const parameters = {\r\n    response_type: \"code\",\r\n    client_id: process.env.REACT_APP_SPOTIFY_CLIENT_ID,\r\n    redirect_uri: process.env.REACT_APP_REDIRECT_URL,\r\n    scope: scopes.join(\" \"),\r\n    state: stateLocal,\r\n    code_challenge: codeChallenge,\r\n    code_challenge_method: \"S256\",\r\n  };\r\n\r\n  const authURL =\r\n    \"https://accounts.spotify.com/authorize?\" + buildParams(parameters);\r\n\r\n  const popup = popupWindow(authURL, \"Login With Spotify\", window, 600, 800);\r\n\r\n  return popup;\r\n};\r\n\r\nspotifyApi.requestTokens = (payload) => {\r\n  const { state, code, error } = payload;\r\n\r\n  if (error || state !== stateLocal) return false;\r\n\r\n  const params = new URLSearchParams();\r\n\r\n  params.append(\"client_id\", process.env.REACT_APP_SPOTIFY_CLIENT_ID);\r\n  params.append(\"grant_type\", \"authorization_code\");\r\n  params.append(\"code\", code);\r\n  params.append(\"redirect_uri\", process.env.REACT_APP_REDIRECT_URL);\r\n  params.append(\"code_verifier\", codeVerifierLocal);\r\n\r\n  return axios\r\n    .post(\"https://accounts.spotify.com/api/token\", params, {\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded;\",\r\n      },\r\n    })\r\n    .then((res) => {\r\n      const { access_token, refresh_token, expires_in } = res.data;\r\n      localStorage.setItem(\"sp-accessToken\", access_token);\r\n      localStorage.setItem(\"sp-refreshToken\", refresh_token);\r\n      const adjustedExpiry = (expires_in - 60) * 1000;\r\n      localStorage.setItem(\"sp-expiry\", Date.now() + adjustedExpiry);\r\n      spotifyApi.setAccessToken(access_token);\r\n      spotifyApi.setRefreshToken(refresh_token);\r\n      setTimeout(() => {\r\n        spotifyApi.refreshAccessToken();\r\n      }, adjustedExpiry);\r\n\r\n      return true;\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      return false;\r\n    });\r\n};\r\n\r\nconst formatDuration = (duration) => {\r\n  let seconds = Math.round(duration / 1000);\r\n  const minutes = ~~(seconds / 60);\r\n  seconds -= minutes * 60;\r\n  return `${minutes}:${seconds.toString().padStart(2, \"0\")}`;\r\n};\r\nconst formatTracks = (tracks, playlist = false) => {\r\n  return tracks.map((track) => {\r\n    if (playlist) track = track.track;\r\n    const albumImage = track.album.images.reduce((smallest, image) => {\r\n      if (image.height < smallest.height) return image;\r\n      return smallest;\r\n    }, track.album.images[0]);\r\n    return {\r\n      artist: track.artists[0].name,\r\n      title: track.name,\r\n      id: track.id,\r\n      albumUrl: albumImage.url,\r\n      duration: formatDuration(track.duration_ms),\r\n    };\r\n  });\r\n};\r\nspotifyApi.getTracks = (query, offset) => {\r\n  return spotifyApi\r\n    .searchTracks(query, { offset: offset })\r\n    .then((res) => formatTracks(res.body.tracks.items))\r\n    .catch(() => false);\r\n};\r\nspotifyApi.getMyPlaylist = (playlist, offset) => {\r\n  if (playlist === \"liked\") {\r\n    return spotifyApi\r\n      .getMySavedTracks({ offset })\r\n      .then((res) => formatTracks(res.body.items, true))\r\n      .catch((err) => {\r\n        console.log(err);\r\n        return false;\r\n      });\r\n  }\r\n  return spotifyApi\r\n    .getPlaylist(playlist, { offset })\r\n    .then((res) => formatTracks(res.body.tracks.items, true))\r\n    .catch((err) => {\r\n      console.log(err);\r\n      return false;\r\n    });\r\n};\r\n\r\nspotifyApi.getTracks = (query) => {\r\n  return spotifyApi\r\n    .searchTracks(query)\r\n    .then((res) => formatTracks(res.body.tracks.items))\r\n    .catch(() => false);\r\n};\r\n\r\nspotifyApi.getPlaylists = () => {\r\n  return spotifyApi\r\n    .getUserPlaylists(userId, { limit: 50 })\r\n    .then(\r\n      function (data) {\r\n        return data.body.items.map((playlist) => {\r\n          return {\r\n            name: playlist.name,\r\n            id: playlist.id,\r\n            image: playlist.images[1] || playlist.images[0],\r\n          };\r\n        });\r\n      },\r\n      function (err) {\r\n        console.log(\"Something went wrong!\", err);\r\n      }\r\n    )\r\n    .catch((err) => console.log(err));\r\n};\r\n","import { spotifyApi } from \"../Api/SpotifyApi\";\r\nimport { onClosePlaylist } from \"./playlistSlice\";\r\n\r\nlet clearTracksId = null;\r\nlet queryId = null;\r\n\r\nexport const searchSlice = (set, get) => ({\r\n  clearSearchText: [],\r\n  searchTracksOpen: false,\r\n  searchTracks: [],\r\n  searchFinised: false,\r\n  searchQuery: null,\r\n  searchOffset: 0,\r\n  searchInProgress: false,\r\n\r\n  sendSearchRequest: async (query) => {\r\n    const id = Date.now();\r\n    queryId = id;\r\n    const tracks = await spotifyApi.getTracks(query, 0);\r\n    if (queryId !== id) return;\r\n    clearTracksId = \"abort\"; //cancels close timeout\r\n    set(() => ({\r\n      searchTracks: tracks,\r\n      searchTracksOpen: true,\r\n      searchQuery: query,\r\n      searchOffset: 20,\r\n      searchFinised: tracks.length < 20,\r\n    }));\r\n    onClosePlaylist(set);\r\n  },\r\n\r\n  onCloseSearch: () => onCloseSearch(set),\r\n\r\n  setSearchSong: (song) => {\r\n    set(() => ({ songs: [\"spotify:track:\" + song], isPlaying: true }));\r\n  },\r\n\r\n  searchLoadNextPage: async () => {\r\n    if (!get().searchOffset || get().searchInProgress) return;\r\n    set(() => ({ searchInProgress: true }));\r\n    const tracks = await spotifyApi.getTracks(\r\n      get().searchQuery,\r\n      get().searchOffset\r\n    );\r\n    set((state) => ({\r\n      searchTracks: [...state.searchTracks, ...tracks],\r\n      searchOffset: state.searchOffset + 20,\r\n      searchFinised: tracks.length < 20,\r\n      searchInProgress: false,\r\n    }));\r\n  },\r\n});\r\n\r\nexport const onCloseSearch = (set) => {\r\n  set(() => ({\r\n    searchTracksOpen: false,\r\n    clearSearchText: [],\r\n    searchFinised: false,\r\n    searchQuery: null,\r\n    searchOffset: 0,\r\n    inProgress: false,\r\n  }));\r\n  let id = Date.now();\r\n  clearTracksId = Date.now();\r\n  setTimeout(() => {\r\n    if (id !== clearTracksId) return;\r\n    set(() => ({ searchTracks: [] }));\r\n  }, 500);\r\n};\r\n","import { spotifyApi } from \"../Api/SpotifyApi\";\r\nimport { onCloseSearch } from \"./searchSlice\";\r\n\r\nlet clearPlaylistId = null;\r\nlet queryId = null;\r\n\r\nexport const playlistSlice = (set, get) => ({\r\n  playlistTracksOpen: false,\r\n  playlistTracks: [],\r\n  selectedPlaylist: null,\r\n\r\n  playlistRequestsFinised: false,\r\n  playlistRequestsOffset: 0,\r\n  playlistRequestsInProgress: false,\r\n\r\n  onClosePlaylist: () => {\r\n    onClosePlaylist(set);\r\n  },\r\n  onSelectPlayList: async (playlist) => {\r\n    if (playlist === get().selectedPlaylist) {\r\n      onClosePlaylist(set);\r\n      return;\r\n    }\r\n    const id = Date.now();\r\n    queryId = id;\r\n    const tracks = await spotifyApi.getMyPlaylist(playlist);\r\n    if (queryId !== id) return;\r\n    clearPlaylistId = \"abort\";\r\n    set(() => ({\r\n      selectedPlaylist: playlist,\r\n      playlistTracksOpen: true,\r\n      playlistTracks: tracks,\r\n      playlistRequestsOffset: 20,\r\n      playlistRequestsFinised: tracks.length < 20,\r\n    }));\r\n    onCloseSearch(set);\r\n  },\r\n\r\n  setPlaylistSong: (song) => {\r\n    const playlistTracks = get().playlistTracks;\r\n    const newPlaylist = buildPlaylist(playlistTracks, song);\r\n    set(() => ({ songs: newPlaylist, isPlaying: true }));\r\n  },\r\n\r\n  playlistRequestsLoadNextPage: async () => {\r\n    if (!get().playlistRequestsOffset || get().playlistRequestsInProgress)\r\n      return;\r\n    set(() => ({ playlistRequestsInProgress: true }));\r\n    const tracks = await spotifyApi.getMyPlaylist(\r\n      get().selectedPlaylist,\r\n      get().playlistRequestsOffset\r\n    );\r\n    set((state) => ({\r\n      playlistTracks: [...state.playlistTracks, ...tracks],\r\n      playlistRequestsOffset: state.playlistRequestsOffset + 20,\r\n      playlistRequestsFinised: tracks.length < 20,\r\n      playlistRequestsInProgress: false,\r\n    }));\r\n  },\r\n});\r\n\r\nconst buildPlaylist = (list, song) => {\r\n  for (let i = 0; i < list.length; i++) {\r\n    if (list[i].id === song) {\r\n      return [...list.slice(i, list.length), ...list.slice(0, i)].map(\r\n        (track) => \"spotify:track:\" + track.id\r\n      );\r\n    }\r\n  }\r\n};\r\nexport const onClosePlaylist = (set) => {\r\n  set(() => ({\r\n    selectedPlaylist: null,\r\n    playlistTracksOpen: false,\r\n    playlistRequestsFinised: false,\r\n    playlistRequestsOffset: 0,\r\n    playlistRequestsInProgress: false,\r\n  }));\r\n  let id = Date.now();\r\n  clearPlaylistId = Date.now();\r\n  setTimeout(() => {\r\n    if (id !== clearPlaylistId) return;\r\n    set(() => ({ playlistTracks: [] }));\r\n  }, 500);\r\n};\r\n","import create from \"zustand\";\r\nimport { authSlice } from \"./authSlice\";\r\nimport { playlistSlice } from \"./playlistSlice\";\r\nimport { searchSlice } from \"./searchSlice\";\r\nimport { songsSlice } from \"./songsSlice\";\r\n\r\nexport const useStore = create((set, get) => ({\r\n  ...authSlice(set, get),\r\n  ...playlistSlice(set, get),\r\n  ...searchSlice(set, get),\r\n  ...songsSlice(set, get),\r\n}));\r\n","export const authSlice = (set) => ({\r\n  loggedIn: null,\r\n  accessRequired: false,\r\n  login: () => set(() => ({ loggedIn: true, accessRequired: false })),\r\n  logout: () => {\r\n    set(() => ({ loggedIn: false, interfaceOpen: false, lightsOn: false }));\r\n    localStorage.removeItem(\"sp-accessToken\");\r\n    localStorage.removeItem(\"sp-refreshToken\");\r\n  },\r\n  setAccessRequired: () => set(() => ({ accessRequired: true })),\r\n});\r\n","export const songsSlice = (set) => ({\r\n  songs: [],\r\n  currentSong: null,\r\n  setCurrentSong: (currentSong) => set(() => ({ currentSong })),\r\n});\r\n","export const colors = {\r\n  spotifyLightGreen: \"rgb(30,215,96)\",\r\n  spotifyGreen: \"#1db954\",\r\n  topShadow: \"#25362c\",\r\n  bottomShadow: \"#2b6d42\",\r\n  primary: \"rgb(218, 218, 218)\",\r\n  secondary: \"rgb(168, 168, 168)\",\r\n  primaryBackground: \"rgb(23, 23, 23)\",\r\n  secondaryBackground: \"rgb(45, 45, 45)\",\r\n};\r\n","import styled from \"styled-components\";\r\nimport LogoutIcon from \"@mui/icons-material/Logout\";\r\nimport { colors } from \"../../colors\";\r\n\r\nexport const Container = styled.div`\r\n  height: 50px;\r\n  width: 50px;\r\n  position: fixed;\r\n  top: 10px;\r\n  right: 10px;\r\n  color: white;\r\n  z-index: 7;\r\n`;\r\nexport const StyledLogoutIcon = styled(LogoutIcon)`\r\n  color: ${colors.primary};\r\n`;\r\n","import { IconButton } from \"@mui/material\";\r\nimport { useStore } from \"../Store/store\";\r\nimport { Container, StyledLogoutIcon } from \"./LogoutStyle\";\r\n\r\nexport default function Logout() {\r\n  const loggedIn = useStore((state) => state.loggedIn);\r\n  const logout = useStore((state) => state.logout);\r\n\r\n  if (loggedIn !== true) return null;\r\n  return (\r\n    <Container>\r\n      <IconButton color=\"success\" onClick={logout}>\r\n        <StyledLogoutIcon fontSize=\"large\" />\r\n      </IconButton>\r\n    </Container>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\nimport { colors } from \"../../colors\";\r\n\r\nexport const Status = styled.div`\r\n  width: 130px;\r\n  color: ${({ error }) => (error ? \"rgb(247,49,49)\" : \"\")};\r\n  font-weight: 700;\r\n  height: 45px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n`;\r\n\r\nexport const AccessRequired = styled.div`\r\n  font-size: 1rem;\r\n  color: white;\r\n  padding: 0 25px;\r\n  text-align: center;\r\n`;\r\n\r\nexport const WelcomeButtonsContainer = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: white;\r\n  z-index: 4;\r\n`;\r\nexport const Button = styled.div`\r\n  background-color: ${colors.spotifyGreen};\r\n  width: 200px;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 1.2rem;\r\n  border-radius: 25px;\r\n  cursor: pointer;\r\n  box-shadow: 0 0 6px 0px white;\r\n  user-select: none;\r\n  transition: background-position 0.2s ease-in-out;\r\n  background-image: linear-gradient(to top, white 50%, transparent 50%);\r\n  background-size: 100% 200%;\r\n  background-position: top;\r\n  &:hover {\r\n    background-position: bottom;\r\n    color: ${colors.spotifyGreen};\r\n    font-weight: 600;\r\n  }\r\n`;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport default function Dots() {\r\n  const [dots, setDots] = useState(\"...\");\r\n\r\n  useEffect(() => {\r\n    let t;\r\n    const update = () => {\r\n      t = setTimeout(() => {\r\n        setDots((dots) => {\r\n          if (dots.length === 3) return \"\";\r\n          if (dots.length === 0) return \".\";\r\n          if (dots.length === 1) return \"..\";\r\n          if (dots.length === 2) return \"...\";\r\n        });\r\n        update();\r\n      }, 500);\r\n    };\r\n    update();\r\n    return () => {\r\n      clearTimeout(t);\r\n    };\r\n  }, []);\r\n  return <>{dots}</>;\r\n}\r\n","import { useEffect } from \"react\";\r\nimport {\r\n  Status,\r\n  AccessRequired,\r\n  Button,\r\n  WelcomeButtonsContainer,\r\n} from \"./LoginStyle\";\r\nimport { useLogin } from \"./useLogin\";\r\nimport { spotifyApi } from \"../Api/SpotifyApi\";\r\nimport { useStore } from \"../Store/store\";\r\nimport Dots from \"./Dots\";\r\n\r\nexport default function Login() {\r\n  const loggedIn = useStore((state) => state.loggedIn);\r\n  const accessRequired = useStore((state) => state.accessRequired);\r\n  const login = useStore((state) => state.login);\r\n  const logout = useStore((state) => state.logout);\r\n\r\n  const [initiateSpotifyLogin, inProgress, error] = useLogin();\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const isAuth = await spotifyApi.checkAuthentication();\r\n      if (isAuth) {\r\n        login();\r\n      } else logout();\r\n    })();\r\n  }, [login, logout]);\r\n\r\n  if (loggedIn !== false) return null;\r\n  return (\r\n    <WelcomeButtonsContainer>\r\n      <Button onClick={initiateSpotifyLogin}>Login</Button>\r\n      <Status error={error}>\r\n        {inProgress ? (\r\n          <>\r\n            Authenticating <Dots />\r\n          </>\r\n        ) : (\r\n          error && <>Error Logging In</>\r\n        )}\r\n      </Status>\r\n      {accessRequired && (\r\n        <AccessRequired>\r\n          Sorry, your account needs to be manually authorised. Please get in\r\n          touch.\r\n        </AccessRequired>\r\n      )}\r\n    </WelcomeButtonsContainer>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\n\r\nimport { spotifyApi } from \"../Api/SpotifyApi\";\r\nimport { useStore } from \"../Store/store\";\r\n\r\nexport const useLogin = () => {\r\n  const login = useStore((state) => state.login);\r\n\r\n  const [inProgress, setInProgress] = useState(false);\r\n  const [error, setError] = useState(false);\r\n\r\n  const initiateSpotifyLogin = async () => {\r\n    setInProgress(true);\r\n    setError(false);\r\n\r\n    const popup = await spotifyApi.loginRedirect();\r\n\r\n    const onResponse = async (payload) => {\r\n      // check state\r\n      const success = await spotifyApi.requestTokens(payload);\r\n      setInProgress(false);\r\n      if (success) {\r\n        const loggedIn = await spotifyApi.login();\r\n        if (loggedIn) {\r\n          login();\r\n          return;\r\n        }\r\n      }\r\n      setError(true);\r\n    };\r\n\r\n    window.spotifyCallback = (payload) => {\r\n      popup.close();\r\n      onResponse(payload);\r\n    };\r\n  };\r\n\r\n  return [initiateSpotifyLogin, inProgress, error];\r\n};\r\n","import styled from \"styled-components\";\r\nimport { colors } from \"../../../colors\";\r\n\r\nexport const HeaderContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: ${colors.primaryBackground};\r\n  height: 75px;\r\n  box-shadow: 0 0 15px 0 ${colors.spotifyGreen};\r\n  z-index: 6;\r\n  position: fixed;\r\n  left: 0;\r\n  top: ${({ open }) => (open ? 0 : \"-80px\")};\r\n  transition: top 1s ease-in-out;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport ClearIcon from \"@mui/icons-material/Clear\";\r\nimport { colors } from \"../../../../colors\";\r\n\r\nexport const SearchBarContainer = styled.div`\r\n  width: 650px;\r\n  height: 50px;\r\n  position: relative;\r\n  @media (max-width: 1100px) {\r\n    margin-left: 230px;\r\n    margin-right: 60px;\r\n  }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 25px;\r\n  border: none;\r\n  outline: none;\r\n  padding: 10px 10px 5px 70px;\r\n  background-color: transparent;\r\n  color: ${colors.secondary};\r\n  box-shadow: inset 8px 8px 8px ${colors.topShadow},\r\n    inset -8px -8px 8px ${colors.bottomShadow};\r\n  font-weight: 700;\r\n  font-size: 1rem;\r\n  ::placeholder {\r\n    color: ${colors.secondary};\r\n  }\r\n`;\r\n\r\nexport const StyledSearchIcon = styled(SearchIcon)`\r\n  color: ${colors.secondary};\r\n  position: absolute;\r\n  left: 10px;\r\n  top: 10px;\r\n`;\r\nexport const StyledCancelIcon = styled(ClearIcon)`\r\n  color: ${colors.secondary};\r\n  position: absolute;\r\n  right: 15px;\r\n  top: 10px;\r\n  cursor: pointer;\r\n`;\r\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\r\nimport { debounce } from \"lodash\";\r\nimport {\r\n  Input,\r\n  SearchBarContainer,\r\n  StyledSearchIcon,\r\n  StyledCancelIcon,\r\n} from \"./SearchStyle\";\r\nimport { useStore } from \"../../../Store/store\";\r\n\r\nexport default function Search() {\r\n  const clearSearchText = useStore((state) => state.clearSearchText);\r\n  const onCloseSearch = useStore((state) => state.onCloseSearch);\r\n  const sendSearchRequest = useStore((state) => state.sendSearchRequest);\r\n\r\n  const [searchText, setSearchText] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    setSearchText(\"\");\r\n  }, [clearSearchText]);\r\n\r\n  const requestSearch = useMemo(\r\n    () =>\r\n      debounce(async (query) => {\r\n        if (!query) return;\r\n        sendSearchRequest(query);\r\n      }, 300),\r\n    [sendSearchRequest]\r\n  );\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      requestSearch.cancel();\r\n    };\r\n  }, [requestSearch]);\r\n\r\n  const onSearchTextChange = useCallback(\r\n    (e) => {\r\n      requestSearch(e.target.value);\r\n      setSearchText(e.target.value);\r\n      if (!e.target.value) {\r\n        onCloseSearch();\r\n      }\r\n    },\r\n    [requestSearch, onCloseSearch]\r\n  );\r\n\r\n  return (\r\n    <SearchBarContainer>\r\n      <StyledSearchIcon fontSize=\"large\" />\r\n      <Input\r\n        type=\"text\"\r\n        id=\"search\"\r\n        placeholder={\"Search for songs...\"}\r\n        value={searchText}\r\n        onChange={onSearchTextChange}\r\n        autoComplete=\"off\"\r\n      />\r\n      {searchText && (\r\n        <StyledCancelIcon onClick={onCloseSearch} fontSize=\"large\" />\r\n      )}\r\n    </SearchBarContainer>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const Logo = styled.img`\r\n  position: absolute;\r\n  top: 5px;\r\n  left: 25px;\r\n  width: 200px;\r\n  cursor: pointer;\r\n  z-index: 2;\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/spotifyLogo.0c4ae91b.png\";","import { Logo } from \"./SpotifyLogoStyle\";\r\nimport image from \"./spotifyLogo.png\";\r\n\r\nexport default function SpotifyLogo() {\r\n  const onClick = () => {\r\n    const newWindow = window.open(\r\n      \"https://open.spotify.com/\",\r\n      \"_blank\",\r\n      \"noopener,noreferrer\"\r\n    );\r\n    if (newWindow) newWindow.opener = null;\r\n  };\r\n\r\n  return <Logo onClick={onClick} src={image} alt={\"spotify-logo\"} />;\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { HeaderContainer } from \"./HeaderStyle\";\r\nimport Search from \"./Search/Search\";\r\nimport SpotifyLogo from \"./SpotifyLogo/SpotifyLogo\";\r\n\r\nexport default function Header() {\r\n  const [open, setOpen] = useState(false);\r\n  useEffect(() => {\r\n    setOpen(true);\r\n  }, [open]);\r\n  return (\r\n    <HeaderContainer open={open}>\r\n      <SpotifyLogo />\r\n      <Search />\r\n    </HeaderContainer>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\nimport { colors } from \"../../../colors\";\r\n\r\nexport const TrackResultContainer = styled.div`\r\n  box-sizing: border-box;\r\n  min-height: 65px;\r\n  width: 100%;\r\n  background-color: ${({ isPlaying }) =>\r\n    isPlaying ? \"rgb(40, 50, 40)\" : \"rgba(60, 70, 60, 1)\"};\r\n  margin-bottom: 2px;\r\n  border-radius: 15px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  cursor: pointer;\r\n  position: absolute;\r\n  overflow: hidden;\r\n  padding-left: 100px;\r\n  padding-right: 35px;\r\n  top: ${({ top }) => top}px;\r\n\r\n  &:hover {\r\n    background-color: rgb(50, 60, 50);\r\n    box-shadow: 0 0 4px 0px chartreuse;\r\n  }\r\n`;\r\nexport const Image = styled.img`\r\n  height: 65px;\r\n  width: 65px;\r\n  position: absolute;\r\n  left: 0;\r\n`;\r\nexport const TextContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: calc(100% - 50px);\r\n`;\r\nexport const TrackTitle = styled.div`\r\n  font-size: 1.1rem;\r\n  color: ${({ isPlaying }) =>\r\n    isPlaying ? colors.spotifyGreen : colors.primary};\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n`;\r\nexport const Artist = styled.div`\r\n  font-size: 0.8rem;\r\n  color: ${colors.secondary};\r\n  margin-top: 6px;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n`;\r\nexport const Duration = styled.div`\r\n  font-size: 1rem;\r\n  color: ${colors.primary};\r\n`;\r\n","import {\r\n  TrackResultContainer,\r\n  Image,\r\n  TextContainer,\r\n  TrackTitle,\r\n  Artist,\r\n  Duration,\r\n} from \"./TrackResultStyle\";\r\n\r\nexport default function TrackResult({ track, selectSong, top, isPlaying }) {\r\n  const onClick = () => {\r\n    selectSong(track.id);\r\n  };\r\n  return (\r\n    <TrackResultContainer onClick={onClick} top={top} isPlaying={isPlaying}>\r\n      <Image src={track.albumUrl} alt={track.title} />\r\n      <TextContainer>\r\n        <TrackTitle isPlaying={isPlaying}>{track.title}</TrackTitle>\r\n        <Artist>{track.artist}</Artist>\r\n      </TextContainer>\r\n      <Duration>{track.duration}</Duration>\r\n    </TrackResultContainer>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledOuter = styled.div`\r\n  box-sizing: border-box;\r\n  z-index: 4;\r\n  position: absolute;\r\n  height: ${({ height }) => height}px;\r\n  width: calc(100vw - 350px);\r\n  overflow: auto;\r\n  padding: 25px;\r\n  overflow: auto;\r\n  color: white;\r\n  font-size: 1.5rem;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\nexport const StyledOuterTop = styled(StyledOuter)`\r\n  transition: top 500ms ease-in-out;\r\n  top: ${({ open }) => (open ? \"75px\" : \"-100%\")};\r\n  left: 350px;\r\n`;\r\nexport const StyledOuterLeft = styled(StyledOuter)`\r\n  transition: left 500ms ease-in-out;\r\n  top: 75px;\r\n  left: ${({ open }) => (open ? \"350px\" : \"-100%\")};\r\n`;\r\nexport const StyledInner = styled.div`\r\n  position: relative;\r\n`;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useHeight = () => {\r\n  const [height, setHeight] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const updateHeight = () => {\r\n      setHeight(window.innerHeight - 150);\r\n    };\r\n    updateHeight();\r\n    window.addEventListener(\"resize\", updateHeight);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", updateHeight);\r\n    };\r\n  }, []);\r\n\r\n  return height;\r\n};\r\n","import { StyledInner } from \"./InfiniteLoaderStyle\";\r\n\r\nexport default function InnerElement(props) {\r\n  return <StyledInner {...props} />;\r\n}\r\n","import React, { forwardRef, useCallback, useMemo } from \"react\";\r\nimport { FixedSizeList as List, areEqual } from \"react-window\";\r\nimport InfiniteLoader from \"react-window-infinite-loader\";\r\n\r\nimport { useStore } from \"../../Store/store\";\r\nimport TrackResult from \"../TrackResult/TrackResult\";\r\nimport { StyledOuterLeft } from \"../InfiniteLoader/InfiniteLoaderStyle\";\r\nimport { useHeight } from \"../InfiniteLoader/useHeight\";\r\nimport InnerElement from \"../InfiniteLoader/InnerElement\";\r\n\r\nconst OuterElement = forwardRef(({ children, style, onScroll }, ref) => {\r\n  const open = useStore((state) => state.playlistTracksOpen);\r\n  return (\r\n    <StyledOuterLeft onScroll={onScroll} open={open} height={style.height}>\r\n      {children.props.children.length ? children : <>No Songs Found</>}\r\n    </StyledOuterLeft>\r\n  );\r\n});\r\n\r\nconst Row = React.memo(function Row(props) {\r\n  const setPlaylistSong = useStore((state) => state.setPlaylistSong);\r\n  const { data, index, style } = props;\r\n  const item = data.items[index];\r\n  if (!item) return null;\r\n  const key = item.id;\r\n  return (\r\n    <TrackResult\r\n      key={key}\r\n      track={item}\r\n      top={style.top}\r\n      selectSong={setPlaylistSong}\r\n      isPlaying={item.id === data.currentSong}\r\n    />\r\n  );\r\n}, areEqual);\r\n\r\nexport default function PlaylistTracks() {\r\n  const playlistTracks = useStore((state) => state.playlistTracks);\r\n  const currentSong = useStore((state) => state.currentSong);\r\n\r\n  const hasNextPage = useStore((state) => !state.playlistRequestsFinised);\r\n  const loadMoreItems = useStore((state) => state.playlistRequestsLoadNextPage);\r\n\r\n  const isItemLoaded = useCallback(\r\n    (index) => !hasNextPage || index < playlistTracks.length,\r\n    [hasNextPage, playlistTracks]\r\n  );\r\n\r\n  const itemCount = useMemo(() => {\r\n    return hasNextPage ? playlistTracks.length + 1 : playlistTracks.length;\r\n  }, [hasNextPage, playlistTracks]);\r\n\r\n  const height = useHeight();\r\n\r\n  return (\r\n    <InfiniteLoader\r\n      isItemLoaded={isItemLoaded}\r\n      itemCount={itemCount}\r\n      loadMoreItems={loadMoreItems}\r\n      threshold={5}\r\n    >\r\n      {({ onItemsRendered, ref }) => (\r\n        <List\r\n          ref={ref}\r\n          height={height}\r\n          itemCount={itemCount}\r\n          itemSize={67}\r\n          onItemsRendered={onItemsRendered}\r\n          outerElementType={OuterElement}\r\n          innerElementType={InnerElement}\r\n          itemData={{\r\n            items: playlistTracks,\r\n            currentSong,\r\n          }}\r\n        >\r\n          {Row}\r\n        </List>\r\n      )}\r\n    </InfiniteLoader>\r\n  );\r\n}\r\n","import React, { forwardRef, useCallback, useMemo } from \"react\";\r\nimport { FixedSizeList as List, areEqual } from \"react-window\";\r\nimport InfiniteLoader from \"react-window-infinite-loader\";\r\n\r\nimport { useStore } from \"../../Store/store\";\r\nimport TrackResult from \"../TrackResult/TrackResult\";\r\nimport { StyledOuterTop } from \"../InfiniteLoader/InfiniteLoaderStyle\";\r\nimport { useHeight } from \"../InfiniteLoader/useHeight\";\r\nimport InnerElement from \"../InfiniteLoader/InnerElement\";\r\n\r\nconst OuterElement = forwardRef(({ children, style, onScroll }, ref) => {\r\n  const open = useStore((state) => state.searchTracksOpen);\r\n  return (\r\n    <StyledOuterTop onScroll={onScroll} open={open} height={style.height}>\r\n      {children.props.children.length ? children : <>No Results Found</>}\r\n    </StyledOuterTop>\r\n  );\r\n});\r\n\r\nconst Row = React.memo(function Row(props) {\r\n  const setSearchSong = useStore((state) => state.setSearchSong);\r\n  const { data, index, style } = props;\r\n  const item = data.items[index];\r\n  if (!item) return null;\r\n  const key = item.id;\r\n  return (\r\n    <TrackResult\r\n      key={key}\r\n      track={item}\r\n      top={style.top}\r\n      selectSong={setSearchSong}\r\n      isPlaying={item.id === data.currentSong}\r\n    />\r\n  );\r\n}, areEqual);\r\n\r\nexport default function SearchTracks() {\r\n  const searchTracks = useStore((state) => state.searchTracks);\r\n  const currentSong = useStore((state) => state.currentSong);\r\n\r\n  const hasNextPage = useStore((state) => !state.searchFinised);\r\n  const loadMoreItems = useStore((state) => state.searchLoadNextPage);\r\n\r\n  const isItemLoaded = useCallback(\r\n    (index) => !hasNextPage || index < searchTracks.length,\r\n    [hasNextPage, searchTracks]\r\n  );\r\n\r\n  const itemCount = useMemo(() => {\r\n    return hasNextPage ? searchTracks.length + 1 : searchTracks.length;\r\n  }, [hasNextPage, searchTracks]);\r\n\r\n  const height = useHeight();\r\n\r\n  return (\r\n    <InfiniteLoader\r\n      isItemLoaded={isItemLoaded}\r\n      itemCount={itemCount}\r\n      loadMoreItems={loadMoreItems}\r\n      threshold={5}\r\n    >\r\n      {({ onItemsRendered, ref }) => (\r\n        <List\r\n          ref={ref}\r\n          height={height}\r\n          itemCount={itemCount}\r\n          itemSize={67}\r\n          onItemsRendered={onItemsRendered}\r\n          outerElementType={OuterElement}\r\n          innerElementType={InnerElement}\r\n          itemData={{\r\n            items: searchTracks,\r\n            currentSong,\r\n          }}\r\n        >\r\n          {Row}\r\n        </List>\r\n      )}\r\n    </InfiniteLoader>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\nimport { colors } from \"../../../../colors\";\r\n\r\nexport const PlaylistContainer = styled.div`\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  height: 30px;\r\n  color: ${({ selected }) => (selected ? colors.primary : colors.secondary)};\r\n  font-weight: ${({ selected }) => (selected ? 600 : \"\")};\r\n  cursor: pointer;\r\n  padding: 3px 25px;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  background-color: ${({ selected }) => (selected ? colors.spotifyGreen : \"\")};\r\n  &:hover {\r\n    color: ${colors.primary};\r\n    background-color: ${({ selected }) =>\r\n      selected ? colors.spotifyGreen : \"rgb(60, 70, 60)\"};\r\n  }\r\n`;\r\n","import { useStore } from \"../../../Store/store\";\r\nimport { PlaylistContainer } from \"./PlaylistStyle\";\r\n\r\nexport default function Playlist({ playlist, selected }) {\r\n  const onSelectPlayList = useStore((state) => state.onSelectPlayList);\r\n\r\n  const onClick = () => {\r\n    onSelectPlayList(playlist.id);\r\n  };\r\n  return (\r\n    <PlaylistContainer selected={selected} onClick={onClick}>\r\n      {playlist.name}\r\n    </PlaylistContainer>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\nimport { colors } from \"../../../colors\";\r\n\r\nexport const SidePanelContainer = styled.div`\r\n  box-sizing: border-box;\r\n  width: 350px;\r\n  height: calc(100vh - 157px);\r\n  background-color: ${colors.primaryBackground};\r\n  position: absolute;\r\n  top: 75px;\r\n  z-index: 5;\r\n  box-shadow: 7.5px 0 8px -10px ${colors.spotifyGreen};\r\n  padding: 10px 0;\r\n  overflow: auto;\r\n  left: ${({ open }) => (open ? 0 : \"-360px\")};\r\n  transition: left 1s ease-in-out;\r\n`;\r\n","import { useEffect, useState } from \"react\";\r\nimport { spotifyApi } from \"../../Api/SpotifyApi\";\r\nimport { useStore } from \"../../Store/store\";\r\nimport Playlist from \"./Playlist/Playlist\";\r\nimport { SidePanelContainer } from \"./SidePanelStyle\";\r\n\r\nconst likedSongs = { name: \"Liked Songs\", id: \"liked\" };\r\n\r\nexport default function SidePanel() {\r\n  const [open, setOpen] = useState(false);\r\n  const selectedPlaylist = useStore((state) => state.selectedPlaylist);\r\n\r\n  const [playlists, setPlaylists] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setOpen(true);\r\n    (async () => {\r\n      const playlists = await spotifyApi.getPlaylists();\r\n      setPlaylists([likedSongs, ...playlists]);\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <SidePanelContainer open={open}>\r\n      {playlists.map((playlist) => (\r\n        <Playlist\r\n          key={playlist.id}\r\n          playlist={playlist}\r\n          selected={selectedPlaylist === playlist.id}\r\n        />\r\n      ))}\r\n    </SidePanelContainer>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\nimport { colors } from \"../../../colors\";\r\n\r\nexport const PlayerContainer = styled.div`\r\n  position: fixed;\r\n  width: 100%;\r\n  z-index: 6;\r\n  box-shadow: 0 0 15px 0 ${colors.spotifyGreen};\r\n  bottom: ${({ open }) => (open ? 0 : \"-85px\")};\r\n  transition: bottom 1s ease-in-out;\r\n`;\r\n\r\nexport const styles = {\r\n  bgColor: colors.primaryBackground,\r\n  height: \"75px\",\r\n  color: colors.primary,\r\n  sliderTrackColor: colors.secondary,\r\n  sliderColor: colors.spotifyGreen,\r\n  sliderHandleColor: colors.primary,\r\n  trackNameColor: colors.primary,\r\n  trackArtistColor: colors.secondary,\r\n};\r\n","import { useCallback, useEffect, useState } from \"react\";\r\nimport SpotifyPlayer from \"react-spotify-web-playback\";\r\nimport { spotifyApi } from \"../../Api/SpotifyApi\";\r\nimport { useStore } from \"../../Store/store\";\r\nimport { PlayerContainer, styles } from \"./PlayerStyles\";\r\n\r\nexport default function Player() {\r\n  const songs = useStore((state) => state.songs);\r\n  const setCurrentSong = useStore((state) => state.setCurrentSong);\r\n  const [open, setOpen] = useState(false);\r\n  const [play, setPlay] = useState(false);\r\n\r\n  const playerCB = useCallback(\r\n    (state) => {\r\n      if (!state.isPlaying) setPlay(false);\r\n      setCurrentSong(state.track.id);\r\n    },\r\n    [setCurrentSong]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!songs.length) return;\r\n    setPlay(true);\r\n  }, [songs]);\r\n\r\n  useEffect(() => {\r\n    setOpen(true);\r\n  }, []);\r\n\r\n  return (\r\n    <PlayerContainer open={open}>\r\n      <SpotifyPlayer\r\n        token={spotifyApi.getAccessToken()}\r\n        play={play}\r\n        callback={playerCB}\r\n        showSaveIcon\r\n        syncExternalDevice\r\n        uris={songs.length ? songs : null}\r\n        styles={styles}\r\n      />\r\n    </PlayerContainer>\r\n  );\r\n}\r\n","import { useStore } from \"../Store/store\";\r\nimport Header from \"./Header/Header\";\r\nimport PlaylistTracks from \"./PlaylistTracks/PlaylistTracks\";\r\nimport SearchTracks from \"./SearchTracks/SearchTracks\";\r\nimport SidePanel from \"./SidePanel/SidePanel\";\r\nimport Player from \"./Player/Player\";\r\n\r\nexport default function SpotifyComponents() {\r\n  const loggedIn = useStore((state) => state.loggedIn);\r\n\r\n  if (loggedIn !== true) return null;\r\n  return (\r\n    <>\r\n      <Player />\r\n      <Header />\r\n      <SidePanel />\r\n      <PlaylistTracks />\r\n      <SearchTracks />\r\n    </>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  overflow: hidden;\r\n  color: rgb(0, 37, 46);\r\n  z-index: 0;\r\n  background-color: black;\r\n`;\r\nexport const Background = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  background: radial-gradient(circle at top, #034412, #000000);\r\n  z-index: 1;\r\n`;\r\n","import \"./App.css\";\n\nimport Logout from \"./Components/Logout/Logout\";\nimport Login from \"./Components/Login/Login\";\nimport SpotifyComponents from \"./Components/SpotifyComponents/SpotifyComponents\";\nimport { Background, Container } from \"./AppStyle\";\n\nexport default function App() {\n  return (\n    <Container>\n      <Background />\n      <Login />\n      <Logout />\n      <SpotifyComponents />\n    </Container>\n  );\n}\n","import { useEffect, useState } from \"react\";\r\n\r\nexport default function AuthIntercept({ children }) {\r\n  const [pass, setPass] = useState(false);\r\n  useEffect(() => {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const code = urlParams.get(\"code\");\r\n    const state = urlParams.get(\"state\");\r\n    const error = urlParams.get(\"error\");\r\n    if (error || (code && state)) {\r\n      window.opener.spotifyCallback({ code, state, error });\r\n    } else {\r\n      setPass(true);\r\n    }\r\n  }, []);\r\n\r\n  return <>{pass && children}</>;\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport AuthIntercept from \"./Components/AuthIntercept/AuthIntercept\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthIntercept>\n      <App />\n    </AuthIntercept>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}